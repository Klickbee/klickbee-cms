import { useRef } from "react";
import { UseFormReturn } from "react-hook-form";
import { slugify } from "@/lib/utils";

/**
 * Custom hook to handle automatic slug generation from a title/name field
 * @param form - The react-hook-form instance
 * @param initialSlug - Initial slug value for edit mode
 * @returns Function to handle name changes for auto-slug generation
 */
export function useAutoSlug(form: UseFormReturn, initialSlug?: string) {
	const lastAutoGeneratedSlugRef = useRef<string>(initialSlug || "");

	const handleNameChange = (value: string) => {
		const currentSlug = form.getValues("slug");
		const slugifiedName = slugify(value);

		// Only auto-update slug if it's empty or matches the last auto-generated value
		if (!currentSlug || currentSlug === lastAutoGeneratedSlugRef.current) {
			form.setValue("slug", slugifiedName);
			lastAutoGeneratedSlugRef.current = slugifiedName;
		}
	};

	const handleSlugChange = (value: string) => {
		// Update the reference when slug is manually changed
		lastAutoGeneratedSlugRef.current = value;
	};

	return {
		handleNameChange,
		handleSlugChange,
	};
}
